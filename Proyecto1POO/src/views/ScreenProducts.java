/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

import Classes.*;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import javax.swing.*;
import java.io.*;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 * Establece los valores de botones presionados y crea la lista de productos.
 * @author jonns
 */

public class ScreenProducts extends javax.swing.JPanel {
   

    boolean modify_button_item;
    boolean delete_button_item;
    boolean create_button_item;
    boolean search_button_item;
    
    boolean modify_button_product;
    boolean delete_button_product;
    boolean create_button_product;
    boolean search_button_product;
    
    DefaultComboBoxModel model = new DefaultComboBoxModel();
    ArrayList<String> list_category_product = new ArrayList<>();
    
    
    /**
    * Coloca los valores booleanos respectivos, a los botones genera los get y los set.
    * @author jonns
    */
    public ScreenProducts() {
        initComponents();    
        add_list_products();
        loading_list_products();
        Size.setVisible(false);
        Size_Label.setVisible(false);
        
        modify_button_item = false;
        delete_button_item = false;
        create_button_item = false;
        search_button_item = false;

        modify_button_product = false;
        delete_button_product = false;
        create_button_product = false;
        search_button_product = false;
        
    }
    public boolean getmodify_button_item(){
        return modify_button_item;
    }
    
    public boolean getdelete_button_item(){
        return delete_button_item;
    }
    
    public boolean getcreate_button_item(){
        return create_button_item;
    }
    
    public boolean getsearch_button_item(){
        return search_button_item;
    }
    
    public boolean getmodify_button_product(){
        return modify_button_product;
    }
    
    public boolean getdelete_button_product(){
        return delete_button_product;
    }
    
    public boolean getcreate_button_product(){
        return create_button_product;
    }
    public boolean getsearch_button_product(){
        return search_button_product;
    }
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ProductsView = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        Create_Item = new javax.swing.JButton();
        Modify_Product = new javax.swing.JButton();
        Search_Product = new javax.swing.JButton();
        Delete_Product = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Type = new javax.swing.JComboBox<>();
        Size_Label = new javax.swing.JLabel();
        Size = new javax.swing.JComboBox<>();
        Product_Category = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Modify_Item = new javax.swing.JButton();
        Delete_Item = new javax.swing.JButton();
        Amount = new javax.swing.JTextField();
        Item_Id = new javax.swing.JTextField();
        Item_Name = new javax.swing.JTextField();
        Brand = new javax.swing.JTextField();
        Price = new javax.swing.JTextField();
        Search_Item = new javax.swing.JButton();
        Cancel_Item = new javax.swing.JButton();
        Create_Product = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        Accept_Item = new javax.swing.JButton();
        Search_I = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Category_Id = new javax.swing.JTextField();
        Search_P = new javax.swing.JButton();
        Cancel_Product = new javax.swing.JButton();
        Accept_Product = new javax.swing.JButton();
        Name_Product = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1030, 720));
        setMinimumSize(new java.awt.Dimension(1030, 720));
        setPreferredSize(new java.awt.Dimension(1030, 720));

        ProductsView.setBackground(new java.awt.Color(255, 255, 255));
        ProductsView.setMaximumSize(new java.awt.Dimension(1030, 730));
        ProductsView.setMinimumSize(new java.awt.Dimension(1030, 730));
        ProductsView.setPreferredSize(new java.awt.Dimension(1030, 730));

        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/SalirView.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setPreferredSize(new java.awt.Dimension(32, 32));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Create_Item.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        Create_Item.setForeground(new java.awt.Color(0, 0, 0));
        Create_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/agregar-producto.png"))); // NOI18N
        Create_Item.setText("Create Item");
        Create_Item.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Create_Item.setContentAreaFilled(false);
        Create_Item.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Create_Item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Create_ItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Create_ItemMouseExited(evt);
            }
        });
        Create_Item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Create_ItemActionPerformed(evt);
            }
        });

        Modify_Product.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        Modify_Product.setForeground(new java.awt.Color(0, 0, 0));
        Modify_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/editar-producto-32.png"))); // NOI18N
        Modify_Product.setText("Modify Product");
        Modify_Product.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Modify_Product.setContentAreaFilled(false);
        Modify_Product.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Modify_Product.setPreferredSize(new java.awt.Dimension(125, 34));
        Modify_Product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Modify_ProductMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Modify_ProductMouseExited(evt);
            }
        });
        Modify_Product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Modify_ProductActionPerformed(evt);
            }
        });

        Search_Product.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        Search_Product.setForeground(new java.awt.Color(0, 0, 0));
        Search_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b√∫squeda-32.png"))); // NOI18N
        Search_Product.setText("Search Product");
        Search_Product.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Search_Product.setContentAreaFilled(false);
        Search_Product.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Search_Product.setPreferredSize(new java.awt.Dimension(125, 34));
        Search_Product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Search_ProductMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Search_ProductMouseExited(evt);
            }
        });
        Search_Product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_ProductActionPerformed(evt);
            }
        });

        Delete_Product.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        Delete_Product.setForeground(new java.awt.Color(0, 0, 0));
        Delete_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Delete-32.png"))); // NOI18N
        Delete_Product.setText("Delete Product");
        Delete_Product.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Delete_Product.setContentAreaFilled(false);
        Delete_Product.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Delete_Product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Delete_ProductMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Delete_ProductMouseExited(evt);
            }
        });
        Delete_Product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_ProductActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Item Id:");

        jLabel7.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Category Id:");

        jLabel9.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Type:");

        jLabel10.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Amount:");

        Type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bicycle", "Accessories", "Food Supplements" }));
        Type.setEnabled(false);
        Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypeActionPerformed(evt);
            }
        });

        Size_Label.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        Size_Label.setForeground(new java.awt.Color(0, 0, 0));
        Size_Label.setText("Size:");

        Size.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12", "16", "22", "26", "27", "27.5", "29" }));
        Size.setEnabled(false);
        Size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SizeActionPerformed(evt);
            }
        });

        Product_Category.setBorder(null);
        Product_Category.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Product_Category.setEnabled(false);
        Product_Category.setOpaque(false);
        Product_Category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Product_CategoryActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Brand:");

        jLabel13.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Price:");

        Modify_Item.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        Modify_Item.setForeground(new java.awt.Color(0, 0, 0));
        Modify_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/editar-producto-32.png"))); // NOI18N
        Modify_Item.setText("Modify Item");
        Modify_Item.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Modify_Item.setContentAreaFilled(false);
        Modify_Item.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Modify_Item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Modify_ItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Modify_ItemMouseExited(evt);
            }
        });
        Modify_Item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Modify_ItemActionPerformed(evt);
            }
        });

        Delete_Item.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        Delete_Item.setForeground(new java.awt.Color(0, 0, 0));
        Delete_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Delete-32.png"))); // NOI18N
        Delete_Item.setText("Delete Item");
        Delete_Item.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Delete_Item.setContentAreaFilled(false);
        Delete_Item.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Delete_Item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Delete_ItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Delete_ItemMouseExited(evt);
            }
        });
        Delete_Item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_ItemActionPerformed(evt);
            }
        });

        Amount.setEnabled(false);
        Amount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AmountKeyTyped(evt);
            }
        });

        Item_Id.setEnabled(false);
        Item_Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Item_IdActionPerformed(evt);
            }
        });
        Item_Id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Item_IdKeyTyped(evt);
            }
        });

        Item_Name.setAutoscrolls(false);
        Item_Name.setEnabled(false);
        Item_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Item_NameActionPerformed(evt);
            }
        });
        Item_Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Item_NameKeyTyped(evt);
            }
        });

        Brand.setEnabled(false);
        Brand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BrandKeyTyped(evt);
            }
        });

        Price.setEnabled(false);
        Price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PriceKeyTyped(evt);
            }
        });

        Search_Item.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        Search_Item.setForeground(new java.awt.Color(0, 0, 0));
        Search_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b√∫squeda-32.png"))); // NOI18N
        Search_Item.setText("Search Item");
        Search_Item.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Search_Item.setContentAreaFilled(false);
        Search_Item.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Search_Item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Search_ItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Search_ItemMouseExited(evt);
            }
        });
        Search_Item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_ItemActionPerformed(evt);
            }
        });

        Cancel_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cancelar-32.png"))); // NOI18N
        Cancel_Item.setText("Cancel");
        Cancel_Item.setAlignmentX(1.0F);
        Cancel_Item.setBounds(50,50,60,30);
        Cancel_Item.setAlignmentY(1.0F);
        Cancel_Item.setBorder(null);
        Cancel_Item.setContentAreaFilled(false);
        Cancel_Item.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cancel_Item.setEnabled(false);
        Cancel_Item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Cancel_ItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Cancel_ItemMouseExited(evt);
            }
        });
        Cancel_Item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancel_ItemActionPerformed(evt);
            }
        });

        Create_Product.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        Create_Product.setForeground(new java.awt.Color(0, 0, 0));
        Create_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/agregar-producto.png"))); // NOI18N
        Create_Product.setText("Create Product");
        Create_Product.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Create_Product.setContentAreaFilled(false);
        Create_Product.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Create_Product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Create_ProductMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Create_ProductMouseExited(evt);
            }
        });
        Create_Product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Create_ProductActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Dubai Medium", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("PRODUCTS");

        jLabel16.setFont(new java.awt.Font("Dubai Medium", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("ITEMS");

        Accept_Item.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        Accept_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/aceptar-32.png"))); // NOI18N
        Accept_Item.setText("Accept");
        Accept_Item.setBorder(null);
        Accept_Item.setBorderPainted(false);
        Accept_Item.setContentAreaFilled(false);
        Accept_Item.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Accept_Item.setEnabled(false);
        Accept_Item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Accept_ItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Accept_ItemMouseExited(evt);
            }
        });
        Accept_Item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Accept_ItemActionPerformed(evt);
            }
        });

        Search_I.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b√∫squeda-32.png"))); // NOI18N
        Search_I.setBorder(null);
        Search_I.setContentAreaFilled(false);
        Search_I.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Search_I.setEnabled(false);
        Search_I.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Search_IMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Search_IMouseExited(evt);
            }
        });
        Search_I.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_IActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Category Id:");

        jLabel3.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Name:");

        Category_Id.setEnabled(false);

        Search_P.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b√∫squeda-32.png"))); // NOI18N
        Search_P.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Search_P.setContentAreaFilled(false);
        Search_P.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Search_P.setEnabled(false);
        Search_P.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Search_PMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Search_PMouseExited(evt);
            }
        });
        Search_P.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_PActionPerformed(evt);
            }
        });

        Cancel_Product.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        Cancel_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cancelar-32.png"))); // NOI18N
        Cancel_Product.setText("Cancel");
        Cancel_Product.setBorder(null);
        Cancel_Product.setBorderPainted(false);
        Cancel_Product.setContentAreaFilled(false);
        Cancel_Product.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cancel_Product.setEnabled(false);
        Cancel_Product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Cancel_ProductMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Cancel_ProductMouseExited(evt);
            }
        });
        Cancel_Product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancel_ProductActionPerformed(evt);
            }
        });

        Accept_Product.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        Accept_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/aceptar-32.png"))); // NOI18N
        Accept_Product.setText("Accept");
        Accept_Product.setBorder(null);
        Accept_Product.setBorderPainted(false);
        Accept_Product.setContentAreaFilled(false);
        Accept_Product.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Accept_Product.setEnabled(false);
        Accept_Product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Accept_ProductMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Accept_ProductMouseExited(evt);
            }
        });
        Accept_Product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Accept_ProductActionPerformed(evt);
            }
        });

        Name_Product.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Item Name:");

        javax.swing.GroupLayout ProductsViewLayout = new javax.swing.GroupLayout(ProductsView);
        ProductsView.setLayout(ProductsViewLayout);
        ProductsViewLayout.setHorizontalGroup(
            ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProductsViewLayout.createSequentialGroup()
                .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(Create_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ProductsViewLayout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(jLabel15))
                            .addGroup(ProductsViewLayout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(Modify_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Search_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(Delete_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(184, 184, 184)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(ProductsViewLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel3)))
                        .addGap(1, 1, 1)
                        .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Category_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Name_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(Search_P, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(Accept_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(Cancel_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(Create_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ProductsViewLayout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(Modify_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Search_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ProductsViewLayout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(jLabel16)))
                        .addGap(26, 26, 26)
                        .addComponent(Delete_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jLabel9)
                        .addGap(9, 9, 9)
                        .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Type, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ProductsViewLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(Size_Label)
                                .addGap(13, 13, 13)
                                .addComponent(Size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addComponent(Accept_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Cancel_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ProductsViewLayout.createSequentialGroup()
                                .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(ProductsViewLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Item_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ProductsViewLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Product_Category, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(5, 5, 5)
                                .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel10)))
                            .addGroup(ProductsViewLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(Item_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Price, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                            .addComponent(Amount)
                            .addComponent(Brand))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Search_I, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6))
        );
        ProductsViewLayout.setVerticalGroup(
            ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProductsViewLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(Create_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(ProductsViewLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Modify_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Search_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(Delete_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel3))
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addComponent(Category_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(Name_Product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(Search_P, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Accept_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cancel_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Create_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Modify_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Search_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Delete_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, 15)
                .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Item_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(Brand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Search_I, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(Product_Category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Item_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(Amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addComponent(Type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(ProductsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Size_Label)
                            .addComponent(Size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Accept_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ProductsViewLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(Cancel_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ProductsView, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ProductsView, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    /**
    * Restablece los valores originales de las estructuras en la interfaz
    * @author jonns
    */
    private void Cancel_ItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_ItemActionPerformed
        Reset_Texts();
        Cancel_Item.setForeground(Color.GRAY);
        Cancel_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cancelar-32.png")));
        Create_Item.setEnabled(true);
        Modify_Item.setEnabled(true);
        Search_Item.setEnabled(true);
        Delete_Item.setEnabled(true);

        Item_Id.setEnabled(false);
        Search_I.setVisible(false);
        Search_I.setEnabled(false);
        model.setSelectedItem("");
        Product_Category.setEnabled(false);
        Item_Name.setEnabled(false);
        Type.setEnabled(false);
        Type.setSelectedItem("Bicycle");
        Size.setEnabled(false);
        Size.setVisible(false);
        Size_Label.setVisible(false);
        Brand.setEnabled(false);
        Price.setEnabled(false);
        Amount.setEnabled(false);

        Accept_Item.setEnabled(false);
        Cancel_Item.setEnabled(false);
        
        modify_button_item = false;
        delete_button_item = false;
        create_button_item = false;
        search_button_item = false;
    }//GEN-LAST:event_Cancel_ItemActionPerformed

    /**
    * Carga de la lista productos al modelo que se usara en el combobox en items.
    * @author jonns
    */
    private void loading_list_products(){
        int aux = 0;
        for (String i:list_category_product){
            model.insertElementAt(i, aux);
            model.setSelectedItem(i);
        }
        Product_Category.setModel(model);
        Product_Category.updateUI();
    }
    /**
    * Carga en el archivo id's un id nuevo,sumandole 1 al respectivo que se uso.
    * @author jonns
    * @param id_mode ayuda a identificar cual id incrementar.
    */
    private void add_id(String id_mode){
        String archive = Paths.get("src", "DataBase", "ID's.csv").toString();
        FileWriter fw = null;
        PrintWriter pw = null;
        try{ 
            fw = new FileWriter(archive);
            pw = new PrintWriter(fw);
            for (id_class i : main_class.ids) {
            String line = null;

            if (id_mode.equals("product")) {
                 line = (i.getId_product() + 1) + "," + i.getId_item() + "," + i.getId_customer() + "," + i.getId_maintenance() + "," + i.getId_bill() + "," + i.getId_detail();
            }else if (id_mode.equals("item")) {
                 line = i.getId_product() + "," + (i.getId_item() + 1) + "," + i.getId_customer() + "," + i.getId_maintenance() + "," + i.getId_bill() + "," + i.getId_detail();
            }
            pw.println(line);
            }
            
        }catch (Exception ex) {
            ex.printStackTrace();
        }
        finally{
            try{
                if(fw != null){
                    fw.close();
            }
            }catch(Exception ex){
                    ex.printStackTrace();
            }      
        }
    }
    /**
    * Hace validaciones y redirige a otros metodos dependiendo de cual boton este presionado.
    * @author jonns
    */
    
    
   
    private void Accept_ItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Accept_ItemActionPerformed

        String textFromTextField_category = (String) Product_Category.getSelectedItem();
        if (textFromTextField_category.isEmpty()){
            JOptionPane.showMessageDialog(null, "Product Category Without Text");
            return;
        }
        ///////////////////////////////////////////////
        String textFromTextField_name = Item_Name.getText();
        if (textFromTextField_name.isEmpty()){
            JOptionPane.showMessageDialog(null, "Item Name Without Text");
            return;
        }
        if (textFromTextField_name.trim().equals(textFromTextField_name)) {
        }else {
            JOptionPane.showMessageDialog(null, "Item Name With Spaces At The Ends");
            return;
        }

        ///////////////////////////////////////////////
        String textFromTextField_brand = Brand.getText();
        if (textFromTextField_brand.isEmpty()){
            JOptionPane.showMessageDialog(null, "Brand Without Text");
            return;
        }

        if (textFromTextField_brand.trim().equals(textFromTextField_brand)) {
        }else {
            JOptionPane.showMessageDialog(null, "Brand With Spaces At The Ends");
            return;
        }
        ///////////////////////////////////////////////
        String textFromTextField_price = Price.getText();
        if (textFromTextField_price.isEmpty()){
            JOptionPane.showMessageDialog(null, "Price Without Text");
            return;
        }
        ///////////////////////////////////////////////
        String textFromTextField_amount = Amount.getText();
        if (textFromTextField_amount.isEmpty()){
            JOptionPane.showMessageDialog(null, "Amount Without Text");
            return;
        }

        if (create_button_item == true) {
            Create_item();
            System.out.println("Bot√≥n 1 est√° habilitado. Realizar acciones para boton3.");

        } else if (Search_Item.isEnabled()) {
            System.out.println("Bot√≥n 2 est√° habilitado. Realizar acciones para boton2.");

        } else if (modify_button_item == true) {
            Modify_item(Modify_i);
            Add_item();
            modify_button_item = false;
            System.out.println("Bot√≥n 3 est√° habilitado. Realizar acciones para boton3.");
        } else if (delete_button_item == true) {
            System.out.println("Bot√≥n 4 est√° habilitado. Realizar acciones para boton3.");
            boolean result = Delete_item();
            if (result == false){
                return;
            }
        }

        Reset_Texts();
        Accept_Item.setForeground(Color.GRAY);
        Accept_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Aceptar-32.png")));
        Create_Item.setEnabled(true);
        Modify_Item.setEnabled(true);
        Search_Item.setEnabled(true);
        Delete_Item.setEnabled(true);

        Item_Id.setEnabled(false);
        Search_I.setVisible(false);
        Search_I.setEnabled(false);
        model.setSelectedItem("");
        Product_Category.setEnabled(false);
        Item_Name.setEnabled(false);
        Type.setEnabled(false);
        Type.setSelectedItem("Bicycle");
        Size.setEnabled(false);
        Size.setVisible(false);
        Size_Label.setVisible(false);
        Brand.setEnabled(false);
        Price.setEnabled(false);
        Amount.setEnabled(false);

        Accept_Item.setEnabled(false);
        Cancel_Item.setEnabled(false);
        
        modify_button_item = false;
        delete_button_item = false;
        create_button_item = false;
        search_button_item = false;

    }//GEN-LAST:event_Accept_ItemActionPerformed
    /**
    * Hace un set al textfiel correspondiente con su nuevo id.
    * @author jonns
    * @param id_mode identifica cual es el id a incrementar.
    */
    private void set_id(String id_mode){
        id_class id = main_class.ids.get(0);
        if(id_mode == "product"){
           Category_Id.setText(String.valueOf(id.getId_product()));
        }else if(id_mode == "item"){
           Item_Id.setText(String.valueOf(id.getId_item()));    
        }   
    }

    /**
    * Boton que establece en que condicion van a estar las estructuras de la interfaz.
    * @author jonns
    */   
    private void Create_ProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Create_ProductActionPerformed
        set_id("product");
        Create_Product.setEnabled(false);
        Modify_Product.setEnabled(false);
        Search_Product.setEnabled(false);
        Delete_Product.setEnabled(false);
        Category_Id.setEnabled(false);
        Name_Product.setEnabled(true);
        Accept_Product.setEnabled(true);
        Cancel_Product.setEnabled(true);
        create_button_product = true;
    }//GEN-LAST:event_Create_ProductActionPerformed
    /**
    * Genera una solicitud para ver por cual modo de busqueda se quiere y  establece en que condicion van a estar las estructuras de la interfaz
    * @author jonns
    */ 
    private void Search_ItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_ItemActionPerformed
        
        int opcion = JOptionPane.showOptionDialog(this,"Choose A Search Method",
            "Search",
            JOptionPane.YES_NO_OPTION,   // Tipo de opci√≥n (s√≠/no)
            JOptionPane.QUESTION_MESSAGE, // Tipo de mensaje (pregunta)
            null,                        // Icono personalizado (en este caso, ninguno)
            new Object[]{"ID", "NAME"}, // Texto de los botones
            "Bot√≥n 1");                    // Bot√≥n predeterminado
        Create_Item.setEnabled(false);
        Modify_Item.setEnabled(false);
        Delete_Item.setEnabled(false);
        Search_Item.setEnabled(false);
        search_button_item = true;

        if(opcion == 1){
            Item_Name.setEnabled(true);
        }else{
            Item_Id.setEnabled(true);

        }
        Search_I.setVisible(true);
        Search_I.setEnabled(true);
        Cancel_Item.setEnabled(true);
        loading_list_products();
        
    }//GEN-LAST:event_Search_ItemActionPerformed
    /**
    * Validacion del price
    * @author jonns
    */ 
    private void PriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PriceKeyTyped
        if(Price.getText().length() >= 15){
            evt.consume();
        }
        char c = evt.getKeyChar();
        if (c<'0' || c>'9') evt.consume();
    }//GEN-LAST:event_PriceKeyTyped
    /**
    * Validacion del la brand
    * @author jonns
    */ 
    private void BrandKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BrandKeyTyped
        if(Brand.getText().length() >= 15){
            evt.consume();
        }
    }//GEN-LAST:event_BrandKeyTyped
    /**
    * Validacion del Item_Name
    * @author jonns
    */ 
    private void Item_NameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Item_NameKeyTyped
        if(Item_Name.getText().length() >= 15){
            evt.consume();
        }
    }//GEN-LAST:event_Item_NameKeyTyped
    
    /**
    * Validacion del Item_Id
    * @author jonns
    */
    private void Item_IdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Item_IdKeyTyped
        if(Item_Id.getText().length() >= 15){
            evt.consume();
        }
        char c = evt.getKeyChar();
        if (c<'0' || c>'9') evt.consume();

    }//GEN-LAST:event_Item_IdKeyTyped
    
    private void Item_IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Item_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Item_IdActionPerformed
    /**
    * Validacion del Amount
    * @author jonns
    */
    private void AmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AmountKeyTyped
        if(Amount.getText().length() >= 15){
            evt.consume();
        }
        char c = evt.getKeyChar();
        if (c<'0' || c>'9') evt.consume();
    }//GEN-LAST:event_AmountKeyTyped
    
    /**
    * Genera una solicitud para ver por cual modo de busqueda se quiere y  establece en que condicion van a estar las estructuras de la interfaz
    * @author jonns
    */
    private void Delete_ItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_ItemActionPerformed
        //String iconPath = "/Img/boxx.png";

        // Cargar la imagen como un ImageIcon
        //ImageIcon customIcon = new ImageIcon(iconPath);
        
        int opcion = JOptionPane.showOptionDialog(this,"Choose A Search Method",
            "Search",
            JOptionPane.YES_NO_OPTION,   // Tipo de opci√≥n (s√≠/no)
            JOptionPane.QUESTION_MESSAGE, // Tipo de mensaje (pregunta)
            null,                        // Icono personalizado (en este caso, ninguno)
            new Object[]{"ID", "NAME"}, // Texto de los botones
            "Bot√≥n 1");                    // Bot√≥n predeterminado

        Create_Item.setEnabled(false);
        Search_Item.setEnabled(false);
        Modify_Item.setEnabled(false);
        Delete_Item.setEnabled(false);
        delete_button_item = true;

        if(opcion == 1){
            Item_Name.setEnabled(true);
        }else{
            Item_Id.setEnabled(true);

        }
        Search_I.setVisible(true);
        Search_I.setEnabled(true);
        Cancel_Item.setEnabled(true);
        loading_list_products();
    }//GEN-LAST:event_Delete_ItemActionPerformed

    /**
    * Genera una solicitud para ver por cual modo de busqueda se quiere y  establece en que condicion van a estar las estructuras de la interfaz
    * @author jonns
    */
    private void Modify_ItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Modify_ItemActionPerformed
        int opcion = JOptionPane.showOptionDialog(this,"Choose A Search Method",
            "Search",
            JOptionPane.YES_NO_OPTION,   // Tipo de opci√≥n (s√≠/no)
            JOptionPane.QUESTION_MESSAGE, // Tipo de mensaje (pregunta)
            null,                        // Icono personalizado (en este caso, ninguno)
            new Object[]{"ID", "NAME"}, // Texto de los botones
            "Bot√≥n 1");                    // Bot√≥n predeterminado

        Create_Item.setEnabled(false);
        Search_Item.setEnabled(false);
        Delete_Item.setEnabled(false);
        Modify_Item.setEnabled(false);
        modify_button_item = true;

        if(opcion == 1){
            Item_Name.setEnabled(true);
        }else{
            Item_Id.setEnabled(true);

        }
        Search_I.setVisible(true);
        Search_I.setEnabled(true);
        Cancel_Item.setEnabled(true);
        loading_list_products();
    }//GEN-LAST:event_Modify_ItemActionPerformed

    private void SizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SizeActionPerformed

    /**
    * Validacion del Type
    * @author jonns
    */
    private void TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypeActionPerformed
        if ("Bicycle" == Type.getSelectedItem()) {
            Size.setVisible(true);
            Size_Label.setVisible(true);
        } else {
            Size.setVisible(false);
            Size.setSelectedItem("12");
            Size_Label.setVisible(false);

        }

    }//GEN-LAST:event_TypeActionPerformed
    /**
    * Genera una solicitud para ver por cual modo de busqueda se quiere y  establece en que condicion van a estar las estructuras de la interfaz
    * @author jonns
    */
    private void Search_ProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_ProductActionPerformed
        int opcion = JOptionPane.showOptionDialog(this,"Choose A Search Method",
            "Search",
            JOptionPane.YES_NO_OPTION,   // Tipo de opci√≥n (s√≠/no)
            JOptionPane.QUESTION_MESSAGE, // Tipo de mensaje (pregunta)
            null,                        // Icono personalizado (en este caso, ninguno)
            new Object[]{"ID", "NAME"}, // Texto de los botones
            "Bot√≥n 1");                    // Bot√≥n predeterminado
        
        Create_Product.setEnabled(false);
        Modify_Product.setEnabled(false);
        Delete_Product.setEnabled(false);
        Search_Product.setEnabled(false);
        search_button_product = true;
        if(opcion == 1){
            Name_Product.setEnabled(true);
        }else{
            Category_Id.setEnabled(true);

        }
        Search_P.setVisible(true);
        Search_P.setEnabled(true);
        Cancel_Product.setEnabled(true);
    }//GEN-LAST:event_Search_ProductActionPerformed
    /**
    * Genera una solicitud para ver por cual modo de busqueda se quiere y  establece en que condicion van a estar las estructuras de la interfaz
    * @author jonns
    */
    private void Modify_ProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Modify_ProductActionPerformed
        int opcion = JOptionPane.showOptionDialog(this,"Choose A Search Method",
            "Search",
            JOptionPane.YES_NO_OPTION,   // Tipo de opci√≥n (s√≠/no)
            JOptionPane.QUESTION_MESSAGE, // Tipo de mensaje (pregunta)
            null,                        // Icono personalizado (en este caso, ninguno)
            new Object[]{"ID", "NAME"}, // Texto de los botones
            "Bot√≥n 1");                    // Bot√≥n predeterminado

        Create_Product.setEnabled(false);
        Search_Product.setEnabled(false);
        Delete_Product.setEnabled(false);
        Modify_Product.setEnabled(false);
        modify_button_product = true;

        if(opcion == 1){
            Name_Product.setEnabled(true);
        }else{
            Category_Id.setEnabled(true);
        }
        Search_P.setVisible(true);
        Search_P.setEnabled(true);
        Cancel_Product.setEnabled(true);
    }//GEN-LAST:event_Modify_ProductActionPerformed
    /**
    * agrega a una lista.
    * @author jonns
    */
    private void add_list_products(){
        for (int i = main_class.products.size() - 1; i >= 0; i--) {
            product_class product = main_class.products.get(i);
            list_category_product.add(product.getId_category() + "-" + product.getName_product());
    }
    }
    /**
    * Establece en que condicion van a estar las estructuras de la interfaz
    * @author jonns
    */
    private void Create_ItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Create_ItemActionPerformed
        set_id("item");
        Create_Item.setEnabled(false);
        Modify_Item.setEnabled(false);
        Search_Item.setEnabled(false);
        Delete_Item.setEnabled(false);
        Type.setSelectedItem("Bicycle");
        Product_Category.setEnabled(true);
        Item_Name.setEnabled(true);
        Type.setEnabled(true);
        Size.setEnabled(true);
        Brand.setEnabled(true);
        Price.setEnabled(true);
        Amount.setEnabled(true);
        Accept_Item.setEnabled(true);
        Cancel_Item.setEnabled(true);
        create_button_item = true;
        //loading_list_products();

    }//GEN-LAST:event_Create_ItemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        borrarPanel(new ScreenProducts());
        ShowJPanel(new ScreenMain());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        // TODO add your handling code here:
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/SalirView.png")));
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/SalirView2.png")));
    }//GEN-LAST:event_jButton1MouseEntered
    
    /**
    * Hace una busqueda en el array de objetos y si lo encuentra abre otro metodo.
    * @author jonns
    */
    private void Search_IActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_IActionPerformed

        String textFromTextField_id = Item_Id.getText();
        String textFromTextField_name = Item_Name.getText();
        int id_item = 0;
        String item_name = "f";
        Modify_i = null;
        if (textFromTextField_id.isEmpty() && textFromTextField_name.isEmpty()){
            JOptionPane.showMessageDialog(null, "Item Code Without Text");
            return;
        }
        if  (!textFromTextField_id.isEmpty()){
            id_item = Integer.parseInt(textFromTextField_id);
        }
        if  (!textFromTextField_name.isEmpty()){
            item_name = String.valueOf(textFromTextField_name);
        }
        Boolean flag_found = false;

        //System.out.println(main_class.products.get(0));
        for (int i = 0; i < main_class.items.size(); i++) {
            item_class item = main_class.items.get(i);
            if(id_item == item.getId_item() || item_name.equals(item.getName_item())){
                System.out.println(i);
                System.out.println(item.getId_item());
                JOptionPane.showMessageDialog(this, "Found");
                flag_found = true;
                System.out.println("Id_product:" + item.getId_item());
                Item_Id.setText(String.valueOf(item.getId_item()));
                Product_Category.setSelectedItem(String.valueOf(item.getCategory_item()));
                Item_Name.setText(item.getName_item());
                Type.setSelectedItem(item.getType_item());
                if ("Bicycle" == Type.getSelectedItem()){
                    Size.setVisible(true);
                    Size_Label.setVisible(true);
                }
                if (modify_button_item == true){
                    Modify_i = item;
                    Item_Id.setEnabled(false);
                    Search_I.setEnabled(false);
                    Product_Category.setEnabled(true);
                    Item_Name.setEnabled(true);
                    Type.setEnabled(true);
                    Size.setEnabled(true);
                    Brand.setEnabled(true);
                    Price.setEnabled(true);
                    Amount.setEnabled(true);
                    Accept_Item.setEnabled(true);
                    Cancel_Item.setEnabled(true);
                }
                if (search_button_item == true || delete_button_item == true ){
                    Item_Name.setEnabled(false);
                }

                Size.setSelectedItem(String.valueOf(item.getSize_item()));
                Brand.setText(item.getBrand_item());
                Price.setText(String.valueOf(item.getPrice_item()));
                Amount.setText(String.valueOf(item.getAmount_item()));
                Item_Id.setEnabled(false);
                Accept_Item.setEnabled(true);
                Cancel_Item.setEnabled(true);
                Search_I.setEnabled(false);
                break;
            }
        }
        if(flag_found == false){
            JOptionPane.showMessageDialog(null, "Not Found");
        }
    }//GEN-LAST:event_Search_IActionPerformed

    /**
    * Hace una busqueda en el array de objetos y si lo encuentra abre otro metodo.
    * @author jonns
    */
    private void Search_PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_PActionPerformed
        String textFromTextField_id = Category_Id.getText();
        String textFromTextField_name = Name_Product.getText();
        int id_product = 0;
        String product_name = "f";
        Modify_p = null;
        if (textFromTextField_id.isEmpty() && textFromTextField_name.isEmpty()){
            JOptionPane.showMessageDialog(null, "Product ID Without Text");
            return;
        }
        if  (!textFromTextField_id.isEmpty()){
            id_product = Integer.parseInt(textFromTextField_id);
        }
        if  (!textFromTextField_name.isEmpty()){
            product_name = String.valueOf(textFromTextField_name);
        }
        Boolean flag_found = false;
        for (int i = 0; i < main_class.products.size(); i++) {
            product_class product = main_class.products.get(i);

            if(id_product == product.getId_category()|| product_name.equals(product.getName_product())){
                JOptionPane.showMessageDialog(this, "Found");
                flag_found = true;
                Category_Id.setText(String.valueOf(product.getId_category()));
                Name_Product.setText(product.getName_product());
                if (modify_button_product == true){
                    Modify_p = product;
                    Category_Id.setEnabled(false);
                    Name_Product.setEnabled(true);
                }
                if (search_button_product == true || delete_button_product == true ){
                    Name_Product.setEnabled(false);
                }

                Category_Id.setEnabled(false);
                Accept_Product.setEnabled(true);
                Cancel_Product.setEnabled(true);
                Search_P.setEnabled(false);
                break;
            }
        }
        if(flag_found == false){
            JOptionPane.showMessageDialog(null, "Not Found");
        }
    }//GEN-LAST:event_Search_PActionPerformed

    /**
    * Hace validaciones para saber que boton se presiono y asi ir a un metodo distinto
    * @author jonns
    */
    
    
    private boolean verify_use(String product){
        System.out.println(product);
        for (item_class A : main_class.items) {
            if(A.getCategory_item().equals(product)){
                JOptionPane.showMessageDialog(this, "This Product Is Already In Items");
                return true;
            }
                
        }
        return false;
    }
    private void Accept_ProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Accept_ProductActionPerformed
        String textFromTextField_category = Category_Id.getText();
        if (textFromTextField_category.isEmpty()){
            JOptionPane.showMessageDialog(null, "Product Category Without Text");
            return;
        }
        ///////////////////////////////////////////////
        String textFromTextField_name = Name_Product.getText();
        if (textFromTextField_name.isEmpty()){
            JOptionPane.showMessageDialog(null, "Product Name Without Text");
            
            return;
        }
        if (textFromTextField_name.trim().equals(textFromTextField_name)) {
        }else {
            JOptionPane.showMessageDialog(null, "Product Name With Spaces At The Ends");
            return;
        }
 
        if (create_button_product == true) {
            Create_products();
            System.out.println("Bot√≥n 1 est√° habilitado. Realizar acciones para boton3.");

        } else if (Search_P.isEnabled()) {
            System.out.println("Bot√≥n 2 est√° habilitado. Realizar acciones para boton2.");

        } else if (modify_button_product == true) {
            boolean found = verify_use(String.valueOf(Modify_p.getId_category()) + "-" + Modify_p.getName_product());
            if (found == true){
                return;
            }
            Modify_product(Modify_p);
            Add_product();
            
            list_category_product.clear();
            model.removeAllElements();
            add_list_products();
            loading_list_products();
            
            modify_button_product = false;
            System.out.println("Bot√≥n 3 est√° habilitado. Realizar acciones para boton3.");
        } else if (delete_button_product == true) {
            System.out.println("Bot√≥n 4 est√° habilitado. Realizar acciones para boton3.");
            boolean found = verify_use(String.valueOf(Category_Id.getText() + "-" + Name_Product.getText()));
            if (found == true){
                return;
            }
            boolean result = Delete_product();
            if (result == false){
                return;
            }else{
            list_category_product.clear();
            model.removeAllElements();
            add_list_products();
            loading_list_products();  
            }
        }
        Reset_Texts();
        Accept_Product.setForeground(Color.GRAY);
        Accept_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/aceptar-32.png")));
        Create_Product.setEnabled(true);
        Modify_Product.setEnabled(true);
        Search_Product.setEnabled(true);
        Delete_Product.setEnabled(true);

        Category_Id.setEnabled(false);
        Name_Product.setEnabled(false);
        Accept_Product.setEnabled(false);
        Cancel_Product.setEnabled(false);
        
        Search_P.setEnabled(false);
       
        modify_button_product = false;
        delete_button_product = false;
        create_button_product = false;
        search_button_product = false;
        
        
        
    }//GEN-LAST:event_Accept_ProductActionPerformed
    /**
    * Resetear los textfield y las demas estructuras de la interfaz.
    * @author jonns
    */
    private void Cancel_ProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_ProductActionPerformed
        Reset_Texts();
        Cancel_Product.setForeground(Color.GRAY);
        Cancel_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cancelar-32.png")));
        Create_Product.setEnabled(true);
        Modify_Product.setEnabled(true);
        Search_Product.setEnabled(true);
        Delete_Product.setEnabled(true);
        Category_Id.setEnabled(false);
        Name_Product.setEnabled(false);
        Accept_Product.setEnabled(false);
        Cancel_Product.setEnabled(false);
        Search_P.setEnabled(false);
        
        
        modify_button_product = false;
        delete_button_product = false;
        create_button_product = false;
        search_button_product = false;
        
    }//GEN-LAST:event_Cancel_ProductActionPerformed
    /**
    * Genera una solicitud para ver por cual modo de busqueda se quiere y  establece en que condicion van a estar las estructuras de la interfaz
    * @author jonns
    */
    private void Delete_ProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_ProductActionPerformed
        int opcion = JOptionPane.showOptionDialog(this,"Choose A Search Method",
            "Search",
            JOptionPane.YES_NO_OPTION,   // Tipo de opci√≥n (s√≠/no)
            JOptionPane.QUESTION_MESSAGE, // Tipo de mensaje (pregunta)
            null,                        // Icono personalizado (en este caso, ninguno)
            new Object[]{"ID", "NAME"}, // Texto de los botones
            "Bot√≥n 1");                    // Bot√≥n predeterminado

        Create_Product.setEnabled(false);
        Search_Product.setEnabled(false);
        Delete_Product.setEnabled(false);
        Modify_Product.setEnabled(false);
        delete_button_product = true;

        if(opcion == 1){
            Name_Product.setEnabled(true);
        }else{
            Category_Id.setEnabled(true);
        }
        Search_P.setVisible(true);
        Search_P.setEnabled(true);
        Cancel_Product.setEnabled(true);
    }//GEN-LAST:event_Delete_ProductActionPerformed

    private void Item_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Item_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Item_NameActionPerformed

    private void Create_ProductMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Create_ProductMouseEntered
        
        Create_Product.setForeground(Color.GRAY);
        Create_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/agregar-producto42.png")));
    }//GEN-LAST:event_Create_ProductMouseEntered

    private void Create_ProductMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Create_ProductMouseExited
        
        Create_Product.setForeground(Color.black);
        Create_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/agregar-producto.png")));
    }//GEN-LAST:event_Create_ProductMouseExited

    private void Modify_ProductMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Modify_ProductMouseEntered
        
        Modify_Product.setForeground(Color.GRAY);
        Modify_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/editar-producto-42.png")));
        
    }//GEN-LAST:event_Modify_ProductMouseEntered

    private void Modify_ProductMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Modify_ProductMouseExited
        
        Modify_Product.setForeground(Color.black);
        Modify_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/editar-producto-32.png")));
    }//GEN-LAST:event_Modify_ProductMouseExited

    private void Search_ProductMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Search_ProductMouseEntered
        
        Search_Product.setForeground(Color.GRAY);
        Search_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b√∫squeda-42.png")));
    }//GEN-LAST:event_Search_ProductMouseEntered

    private void Search_ProductMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Search_ProductMouseExited
        Search_Product.setForeground(Color.black);
        Search_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b√∫squeda-32.png")));
    }//GEN-LAST:event_Search_ProductMouseExited

    private void Delete_ProductMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_ProductMouseEntered
        Delete_Product.setForeground(Color.GRAY);
        Delete_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Delete-42.png")));
    }//GEN-LAST:event_Delete_ProductMouseEntered

    private void Delete_ProductMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_ProductMouseExited
        Delete_Product.setForeground(Color.black);
        Delete_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Delete-32.png")));
    }//GEN-LAST:event_Delete_ProductMouseExited

    private void Search_PMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Search_PMouseEntered
       if (Search_P.isEnabled()){
        Search_P.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b√∫squeda-42.png")));
       }
        
    }//GEN-LAST:event_Search_PMouseEntered

    private void Search_PMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Search_PMouseExited
       Search_P.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b√∫squeda-32.png")));
    }//GEN-LAST:event_Search_PMouseExited

    private void Product_CategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Product_CategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Product_CategoryActionPerformed

    private void Create_ItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Create_ItemMouseEntered
        Create_Item.setForeground(Color.GRAY);
        Create_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/agregar-producto42.png")));
    }//GEN-LAST:event_Create_ItemMouseEntered

    private void Create_ItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Create_ItemMouseExited
        Create_Item.setForeground(Color.black);
        Create_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/agregar-producto.png")));
    }//GEN-LAST:event_Create_ItemMouseExited

    private void Delete_ItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_ItemMouseEntered
        Delete_Item.setForeground(Color.GRAY);
        Delete_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Delete-42.png")));
    }//GEN-LAST:event_Delete_ItemMouseEntered

    private void Delete_ItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Delete_ItemMouseExited
        Delete_Item.setForeground(Color.black);
        Delete_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Delete-32.png")));
    }//GEN-LAST:event_Delete_ItemMouseExited

    private void Modify_ItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Modify_ItemMouseEntered
        Modify_Item.setForeground(Color.GRAY);
        Modify_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/editar-producto-42.png")));
    }//GEN-LAST:event_Modify_ItemMouseEntered

    private void Modify_ItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Modify_ItemMouseExited
        Modify_Item.setForeground(Color.black);
        Modify_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/editar-producto-32.png")));
    }//GEN-LAST:event_Modify_ItemMouseExited

    private void Search_ItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Search_ItemMouseEntered
        Search_Item.setForeground(Color.GRAY);
        Search_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b√∫squeda-42.png")));
    }//GEN-LAST:event_Search_ItemMouseEntered

    private void Search_ItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Search_ItemMouseExited
        Search_Item.setForeground(Color.black);
        Search_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b√∫squeda-32.png")));
    }//GEN-LAST:event_Search_ItemMouseExited

    private void Search_IMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Search_IMouseEntered
        if (Search_I.isEnabled()) {
            Search_I.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b√∫squeda-42.png")));
        }
    }//GEN-LAST:event_Search_IMouseEntered

    private void Search_IMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Search_IMouseExited
        
        Search_I.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b√∫squeda-32.png")));
        
        
    }//GEN-LAST:event_Search_IMouseExited

    private void Accept_ProductMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Accept_ProductMouseEntered
       if (Accept_Product.isEnabled()) {
        Accept_Product.setForeground(Color.GRAY);
        Accept_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Aceptar-42GIF.gif")));
       }
    }//GEN-LAST:event_Accept_ProductMouseEntered

    private void Accept_ProductMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Accept_ProductMouseExited
       if (Accept_Product.isEnabled()) {
       Accept_Product.setForeground(Color.black);
       Accept_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/aceptar-32.png")));
       }
    }//GEN-LAST:event_Accept_ProductMouseExited

    private void Cancel_ProductMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cancel_ProductMouseEntered
        if (Cancel_Product.isEnabled()) {
        Cancel_Product.setForeground(Color.GRAY);
        Cancel_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cancelar-42GIF.gif")));
       }
    }//GEN-LAST:event_Cancel_ProductMouseEntered

    private void Cancel_ProductMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cancel_ProductMouseExited
       if (Cancel_Product.isEnabled()) {
       Cancel_Product.setForeground(Color.black);
       Cancel_Product.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cancelar-32.png")));
       }
    }//GEN-LAST:event_Cancel_ProductMouseExited

    private void Accept_ItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Accept_ItemMouseEntered
        if (Accept_Item.isEnabled()) {
        Accept_Item.setForeground(Color.GRAY);
        Accept_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Aceptar-42GIF.gif")));
       }
    }//GEN-LAST:event_Accept_ItemMouseEntered

    private void Accept_ItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Accept_ItemMouseExited
        if (Accept_Item.isEnabled()) {
        Accept_Item.setForeground(Color.black);
        Accept_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Aceptar-32.png")));
       }
    }//GEN-LAST:event_Accept_ItemMouseExited

    private void Cancel_ItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cancel_ItemMouseEntered
        if (Cancel_Item.isEnabled()) {
        Cancel_Item.setForeground(Color.GRAY);
        Cancel_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cancelar-42GIF.gif")));
       }
    }//GEN-LAST:event_Cancel_ItemMouseEntered

    private void Cancel_ItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cancel_ItemMouseExited
       if (Cancel_Item.isEnabled()) {
       Cancel_Item.setForeground(Color.black);
       Cancel_Item.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/cancelar-32.png")));
       }
    }//GEN-LAST:event_Cancel_ItemMouseExited
     

    
    /**
    * Resetea todos los textfiel en el panel.
    * @author jonns
    */
    private void Reset_Texts(){
        Component[] components = ProductsView.getComponents();
        for (Component component : components) {
            if (component instanceof JTextField) {
                ((JTextField) component).setText("");
            }
        }
    }
    
    /**
    * Agrega al csv el nuevo producto
    * @author jonns
    */
    private void Add_product(){
        String archive = Paths.get("src", "DataBase", "Archivo_CSV_PRODUCTS.csv").toString();
        FileWriter fw = null;
        PrintWriter pw = null;
        
        try{ 
            fw = new FileWriter(archive);
            pw = new PrintWriter(fw);
            for(product_class i: main_class.products){
                String line = i.getId_category()+ "," + i.getName_product();
                pw.println(line);
            }
            
        }catch (Exception ex) {
            ex.printStackTrace();
        }
        finally{
            try{
                if(fw != null){
                    fw.close();
            }
            }catch(Exception ex){
                    ex.printStackTrace();
            }      
        }   
    }
    /**
    * Agrega al csv el nuevo item
    * @author jonns
    */
    private void Add_item(){
        String archive = Paths.get("src", "DataBase", "Archivo_CSV_ITEMS.csv").toString();
        FileWriter fw = null;
        PrintWriter pw = null;
        
        try{ 
            fw = new FileWriter(archive);
            pw = new PrintWriter(fw);
            for(item_class i: main_class.items){
                String line = i.getId_item() + "," + i.getCategory_item() + "," + i.getName_item() + "," + i.getType_item() + "," + i.getSize_item() + "," + i.getBrand_item() + "," + i.getPrice_item() + "," + i.getAmount_item();
                pw.println(line);
            }
            
        }catch (Exception ex) {
            ex.printStackTrace();
        }
        finally{
            try{
                if(fw != null){
                    fw.close();
            }
            }catch(Exception ex){
                    ex.printStackTrace();
            }      
        }
    }
    
    /**
    * Remover del lista de objetos de productos el seleccionado.
    * @author jonns
    */
    private boolean Delete_product(){
        for(int i = 0; i < main_class.products.size(); i++){
            int Id = Integer.parseInt(Category_Id.getText());
            if(main_class.products.get(i).getId_category() == Id){
                int result = JOptionPane.showConfirmDialog(this, "Delete", "Confirmation", JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION){
                    main_class.products.remove(i);
                    JOptionPane.showMessageDialog(this,"Removed");
                    Add_product();
                    return true;
                }else{
                    JOptionPane.showMessageDialog(this,"Cancelled");
                    return false;
                }
            }
        }
        return false;
    }
    /**
    * Remover de la lista de objetos de items el seleccionado.
    * @author jonns
    */
    private boolean Delete_item(){
        for(int i = 0; i < main_class.items.size(); i++){
            int Id = Integer.parseInt(Item_Id.getText());
            if(main_class.items.get(i).getId_item() == Id){
                int result = JOptionPane.showConfirmDialog(this, "Delete", "Confirmation", JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION){
                    main_class.items.remove(i);
                    JOptionPane.showMessageDialog(this,"Removed");
                    Add_item();
                    return true;
                }else{
                    JOptionPane.showMessageDialog(this,"Cancelled");
                    return false;
                }
            }
        }
        return false;
    }
    /**
    * Agregar al array de productos el nuevo objeto.
    * @author jonns
    */
    private void Create_products(){
        int create_category_product;
        String create_name_product;
        Boolean register = false;

        create_category_product = Integer.parseInt(Category_Id.getText());
        create_name_product = Name_Product.getText();
        for(product_class A: main_class.products){
            if(A.getName_product().equals(create_name_product)){
                register = true;
                break;}         
            }
            if(register){
                JOptionPane.showMessageDialog(this,"This Name Already Exists ");  
                return;
            }else{
                product_class product = new product_class();
                product.setId_category(create_category_product);
                product.setName_product(create_name_product);
                main_class.products.add(product);
                model.insertElementAt(product.getId_category() + "-" + product.getName_product(),list_category_product.size());
                add_id("product");
                Add_product();
                id_class id = main_class.ids.get(0);
                id.setId_product(id.getId_product() + 1);
                JOptionPane.showMessageDialog(this, "Item Added Successfully");   
            }   
    }
    /**
    * Agregar al array de items el nuevo objeto.
    * @author jonns
    */
    private void Create_item(){
        int create_id_item;
        String create_category_item;
        String create_name_item;
        String create_type_item;
        Double create_size_item;
        String create_brand_item;
        int create_price_item;
        int create_amount_item;
        Boolean register = false;
            
            
        create_id_item = Integer.parseInt(Item_Id.getText());
        create_category_item = String.valueOf(Product_Category.getSelectedItem());
        create_name_item = Item_Name.getText();
        create_type_item = String.valueOf(Type.getSelectedItem());
        create_size_item = Double.valueOf(String.valueOf(Size.getSelectedItem()));
        create_brand_item = Brand.getText();
        create_price_item = Integer.parseInt(Price.getText());
        create_amount_item = Integer.parseInt(Amount.getText());
          if(create_type_item != "Bicycle"){
             create_size_item = 0.0;}

         for(item_class A: main_class.items){
            if(A.getName_item().equals(create_name_item)){
                register = true;
                break;}         
            }
            
            if(register){
                JOptionPane.showMessageDialog(this,"This Name Already Exists ");  
                return;
            }else{
                item_class item = new item_class();
                item.setId_item(create_id_item);
                item.setCategory_item(create_category_item);
                item.setName_item(create_name_item);
                item.setType_item(create_type_item);
                item.setSize_item(create_size_item);
                item.setBrand_item(create_brand_item);
                item.setPrice_item(create_price_item);
                item.setAmount_item(create_amount_item);
                main_class.items.add(item);
                add_id("item");
                Add_item();
                id_class id = main_class.ids.get(0);
                id.setId_item(id.getId_item() + 1);
                JOptionPane.showMessageDialog(this, "Item Added Successfully");
                
            }
    }
    /**
    * Modificar un objeto producto
    * @author jonns
    * @param Modify es el objeto a modificar de productos.
    */
    private void Modify_product(product_class Modify){
        int modify_category_product;
        String modify_name_product;
        Boolean register = false;
            
            
        modify_category_product = Integer.parseInt(Category_Id.getText());
        modify_name_product = Name_Product.getText();
        
         for (product_class A : main_class.products) {
            if (A.getId_category()== modify_category_product && A.getName_product().equals(modify_name_product)) {
                // El objeto con el mismo id y nombre ya existe
                register = false;
                break;
            }
            // Si no encuentras un objeto con el mismo id, puedes permitir el mismo nombre
            if (A.getId_category()!= modify_category_product && A.getName_product().equals(modify_name_product) ) {
                register = true;
            }
           }
                    
            if(register){
                JOptionPane.showMessageDialog(this,"This Name Already Exists ");  
                return;
            }else{
                Modify.setId_category(modify_category_product);
                Modify.setName_product(modify_name_product);
                JOptionPane.showMessageDialog(this, "Item Modified Successfully");
            }
    }
    /**
    * Agregar al array de productos el nuevo objeto.
    * @author jonns
    * @param Modify es el objeto a modificar de items.
    */
    private void Modify_item(item_class Modify){
        int modify_id_item;
        String modify_category_item;
        String modify_name_item;
        String modify_type_item;
        Double modify_size_item;
        String modify_brand_item;
        int modify_price_item;
        int modify_amount_item;
        Boolean register = false;
            
            
        modify_id_item = Integer.parseInt(Item_Id.getText());
        modify_category_item = String.valueOf(Product_Category.getSelectedItem());
        modify_name_item = Item_Name.getText();
        modify_type_item = String.valueOf(Type.getSelectedItem());
        modify_size_item = Double.valueOf(String.valueOf(Size.getSelectedItem()));
        modify_brand_item = Brand.getText();
        modify_price_item = Integer.parseInt(Price.getText());
        modify_amount_item = Integer.parseInt(Amount.getText());
        
        if(modify_type_item != "Bicycle"){
             modify_size_item = 0.0;}

         for (item_class A : main_class.items) {
            if (A.getId_item() == modify_id_item && A.getName_item().equals(modify_name_item)) {
                // El objeto con el mismo id y nombre ya existe
                register = false;
                break;
            }
            // Si no encuentras un objeto con el mismo id, puedes permitir el mismo nombre
            if (A.getId_item() != modify_id_item && A.getName_item().equals(modify_name_item) ) {
                register = true;
            }
           }
                     

            if(register){
                JOptionPane.showMessageDialog(this,"This Name Already Exists ");  
                return;
            }else{
                Modify.setId_item(modify_id_item);
                Modify.setCategory_item(modify_category_item);
                Modify.setName_item(modify_name_item);
                Modify.setType_item(modify_type_item);
                Modify.setSize_item(modify_size_item);
                Modify.setBrand_item(modify_brand_item);
                Modify.setPrice_item(modify_price_item);
                Modify.setAmount_item(modify_amount_item);
                JOptionPane.showMessageDialog(this, "Item Modified Successfully");
            }
    }
        
       
   
    private item_class Modify_i;
    private product_class Modify_p;
    
 
    
    /**
    * Borra el panel expuesto actualmente.
    * @author jonns
    * @param panel panel a remover.
    */   
    private static void borrarPanel(JPanel panel) {
        panel.removeAll();
        panel.revalidate();
        panel.repaint();
    }
    /**
    * Muestra un panel
    * @author jonns
    * @param p panel a mostrar.
    */ 
    private void ShowJPanel(JPanel p){

        p.setSize(1030,750);
        p.setLocation(0,0);
        ProductsView.removeAll();
        ProductsView.add(p, BorderLayout.CENTER);
        ProductsView.revalidate();
        ProductsView.repaint();  
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Accept_Item;
    private javax.swing.JButton Accept_Product;
    private javax.swing.JTextField Amount;
    private javax.swing.JTextField Brand;
    private javax.swing.JButton Cancel_Item;
    private javax.swing.JButton Cancel_Product;
    private javax.swing.JTextField Category_Id;
    private javax.swing.JButton Create_Item;
    private javax.swing.JButton Create_Product;
    private javax.swing.JButton Delete_Item;
    private javax.swing.JButton Delete_Product;
    private javax.swing.JTextField Item_Id;
    private javax.swing.JTextField Item_Name;
    private javax.swing.JButton Modify_Item;
    private javax.swing.JButton Modify_Product;
    private javax.swing.JTextField Name_Product;
    private javax.swing.JTextField Price;
    private javax.swing.JComboBox<String> Product_Category;
    private javax.swing.JPanel ProductsView;
    private javax.swing.JButton Search_I;
    private javax.swing.JButton Search_Item;
    private javax.swing.JButton Search_P;
    private javax.swing.JButton Search_Product;
    private javax.swing.JComboBox<String> Size;
    private javax.swing.JLabel Size_Label;
    private javax.swing.JComboBox<String> Type;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables


}
