/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

import Classes.bill_class;
import Classes.detail_class;
import Classes.id_class;
import Classes.main_class;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.PageSize;
import com.lowagie.text.pdf.PdfContentByte;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.Graphics;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 * The jPanel screen to show information and actions to the user about bill printing (details).
 * @author josem
 */
public class ScreenPrintBills extends javax.swing.JPanel {

    /**
     * Creates new form ScreenSettings
     */
    public ScreenPrintBills() {
        initComponents();
        TableBillsModel.setColumnIdentifiers(ids);
        TableDetailsModel.setColumnIdentifiers(ids);
        initializeBilling();
        initializeDetail();
        createIdsBills();
        ActualBillsTable.setModel(TableBillsModel);
        ActualPrintedTable.setModel(TableDetailsModel);
    }
    
    //Read CSV variables
    private BufferedReader reader;
    private String line;
    private String parts[] = null;
    
    //Create the Arraylists
    ArrayList<detail_class> details_list = new ArrayList<>();
    ArrayList<bill_class> bills_list = new ArrayList<>();
    
    //Create ComboBox model
    DefaultComboBoxModel ComboBillIdModel = new DefaultComboBoxModel();
    
    //Table variables
    DefaultTableModel TableBillsModel = new DefaultTableModel();
    DefaultTableModel TableDetailsModel = new DefaultTableModel();
    String ids [] = {"Id", "Amount"};

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SettingsView = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        DetailsInformationPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        DetailIdText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        BillIdCombo = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        NumberItemsText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        UnitPriceText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        TotalText = new javax.swing.JTextField();
        NewDetailButton = new javax.swing.JButton();
        DetailAcceptButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ActualPrintedTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ActualBillsTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        SettingsView.setBackground(new java.awt.Color(255, 255, 255));
        SettingsView.setMinimumSize(new java.awt.Dimension(1070, 730));
        SettingsView.setPreferredSize(new java.awt.Dimension(1040, 730));
        SettingsView.setLayout(null);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/SalirView.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setPreferredSize(new java.awt.Dimension(32, 32));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        SettingsView.add(jButton1);
        jButton1.setBounds(990, 10, 32, 32);

        jLabel1.setFont(new java.awt.Font("Dubai Medium", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("BILL PRINT");
        SettingsView.add(jLabel1);
        jLabel1.setBounds(468, 6, 140, 42);

        DetailsInformationPanel.setBackground(new java.awt.Color(255, 255, 255));
        DetailsInformationPanel.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Detail Information");
        DetailsInformationPanel.add(jLabel6);
        jLabel6.setBounds(120, 80, 140, 32);

        jLabel8.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Detail ID:");
        DetailsInformationPanel.add(jLabel8);
        jLabel8.setBounds(120, 120, 60, 24);

        DetailIdText.setEnabled(false);
        DetailsInformationPanel.add(DetailIdText);
        DetailIdText.setBounds(120, 140, 300, 24);

        jLabel11.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Bill ID:");
        DetailsInformationPanel.add(jLabel11);
        jLabel11.setBounds(120, 170, 60, 24);

        BillIdCombo.setEnabled(false);
        BillIdCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                BillIdComboItemStateChanged(evt);
            }
        });
        BillIdCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BillIdComboActionPerformed(evt);
            }
        });
        DetailsInformationPanel.add(BillIdCombo);
        BillIdCombo.setBounds(120, 190, 300, 26);

        jLabel12.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Number of Items:");
        DetailsInformationPanel.add(jLabel12);
        jLabel12.setBounds(120, 220, 110, 24);

        NumberItemsText.setEnabled(false);
        NumberItemsText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NumberItemsTextKeyReleased(evt);
            }
        });
        DetailsInformationPanel.add(NumberItemsText);
        NumberItemsText.setBounds(120, 240, 300, 24);

        jLabel13.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Unit Price:");
        DetailsInformationPanel.add(jLabel13);
        jLabel13.setBounds(120, 270, 70, 24);

        UnitPriceText.setEnabled(false);
        DetailsInformationPanel.add(UnitPriceText);
        UnitPriceText.setBounds(120, 290, 300, 24);

        jLabel14.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Total:");
        DetailsInformationPanel.add(jLabel14);
        jLabel14.setBounds(120, 320, 40, 24);

        TotalText.setEnabled(false);
        DetailsInformationPanel.add(TotalText);
        TotalText.setBounds(120, 340, 300, 24);

        NewDetailButton.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        NewDetailButton.setForeground(new java.awt.Color(0, 0, 0));
        NewDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/agregar-factura-32.png"))); // NOI18N
        NewDetailButton.setText("New Detail");
        NewDetailButton.setBorder(null);
        NewDetailButton.setContentAreaFilled(false);
        NewDetailButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        NewDetailButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NewDetailButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                NewDetailButtonMouseExited(evt);
            }
        });
        NewDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewDetailButtonActionPerformed(evt);
            }
        });
        DetailsInformationPanel.add(NewDetailButton);
        NewDetailButton.setBounds(260, 380, 120, 50);

        DetailAcceptButton.setForeground(new java.awt.Color(0, 0, 0));
        DetailAcceptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/impresora2-32.png"))); // NOI18N
        DetailAcceptButton.setText("Accept Print");
        DetailAcceptButton.setBorder(null);
        DetailAcceptButton.setContentAreaFilled(false);
        DetailAcceptButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DetailAcceptButton.setEnabled(false);
        DetailAcceptButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DetailAcceptButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DetailAcceptButtonMouseExited(evt);
            }
        });
        DetailAcceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DetailAcceptButtonActionPerformed(evt);
            }
        });
        DetailsInformationPanel.add(DetailAcceptButton);
        DetailAcceptButton.setBounds(140, 380, 120, 50);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Union3.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        DetailsInformationPanel.add(jLabel2);
        jLabel2.setBounds(-260, -110, 480, 500);

        SettingsView.add(DetailsInformationPanel);
        DetailsInformationPanel.setBounds(-9, -7, 470, 480);

        ActualPrintedTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Amount"
            }
        ));
        jScrollPane1.setViewportView(ActualPrintedTable);

        SettingsView.add(jScrollPane1);
        jScrollPane1.setBounds(700, 80, 228, 386);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        jButton6.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/enlace-emoji-32.png"))); // NOI18N
        jButton6.setText("User Manual");
        jButton6.setBorder(null);
        jButton6.setContentAreaFilled(false);
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton6MouseExited(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6);
        jButton6.setBounds(320, 90, 130, 50);

        jButton7.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 0));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/archivo-32.png"))); // NOI18N
        jButton7.setText("Documentation");
        jButton7.setBorder(null);
        jButton7.setContentAreaFilled(false);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton7MouseExited(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7);
        jButton7.setBounds(450, 90, 140, 50);

        jButton9.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(0, 0, 0));
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/creators-32.png"))); // NOI18N
        jButton9.setText("Creators");
        jButton9.setBorder(null);
        jButton9.setContentAreaFilled(false);
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton9MouseExited(evt);
            }
        });
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton9);
        jButton9.setBounds(590, 90, 120, 50);

        jLabel7.setFont(new java.awt.Font("Dubai Medium", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("CREDITS");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(470, 20, 110, 42);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Ellipse 2092.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(750, 0, 426, 270);

        SettingsView.add(jPanel2);
        jPanel2.setBounds(0, 480, 1040, 250);

        ActualBillsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Amount"
            }
        ));
        jScrollPane2.setViewportView(ActualBillsTable);

        SettingsView.add(jScrollPane2);
        jScrollPane2.setBounds(460, 80, 228, 386);

        jLabel9.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Actual Bills");
        SettingsView.add(jLabel9);
        jLabel9.setBounds(530, 50, 90, 32);

        jLabel10.setFont(new java.awt.Font("Dubai Medium", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Details (All)");
        SettingsView.add(jLabel10);
        jLabel10.setBounds(770, 50, 100, 32);
        SettingsView.add(jSeparator1);
        jSeparator1.setBounds(0, 476, 1040, 10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(SettingsView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(SettingsView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Creates a jButton for the close of this screen.
     * @param evt The press button action.
     * @author josem
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        borrarPanel(new ScreenProducts());
        ShowJPanel(new ScreenMain());
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * Creates an animation of the jButton1 when the mouse is in the Button.
     * @param evt The mouse exit action.
     * @author josem
     */
    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        // TODO add your handling code here:
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/SalirView.png")));
    }//GEN-LAST:event_jButton1MouseExited
    
    /**
     * Creates an animation of the jButton1 when the mouse is in the Button.
     * @param evt The mouse enter action.
     * @author josem
     */
    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/SalirView2.png")));
    }//GEN-LAST:event_jButton1MouseEntered
    
    /**
     * A redirection to the user manual.
     * @param evt The press button action.
     * @author josem
     */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

    String youtubeVideoURL = "https://youtu.be/dQw4w9WgXcQ?si=rUJiW77yVZZw813f";
   
    try {
            Desktop.getDesktop().browse(new URI(youtubeVideoURL));
        } catch (IOException | URISyntaxException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed
    
    /**
     * A redirection to the project documentation.
     * @param evt The press button action.
     * @author josem
     */
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String archive = Paths.get("src", "Documentation", "Documentacion_Proyecto1_POO.docx").toString();

        // Create a file object with the new path.
        File file = new File(archive);

        try {
            // Open the file with the user default app.
            Desktop.getDesktop().open(file);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton7ActionPerformed
    
    /**
     * A pop up with the project authors.
     * @param evt The press button action.
     * @author josem
     */
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        JOptionPane.showMessageDialog(null,"Creators:\nSebastian Ceciliano Piedra\nJose Mario Jimenez Vargas\nSaymon Porras Briones");
    }//GEN-LAST:event_jButton9ActionPerformed
    
    /**
     * This function is for the setting of the textfields and comboboxes
     * of the screen, and set the next detail id.
     * @param evt The press button action.
     * @author josem
     */
    private void NewDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewDetailButtonActionPerformed
        // TODO add your handling code here:
        set_id("detail");
        NumberItemsText.setText("1");
        for(bill_class bill:bills_list){
            if(bill.getBill_id() == Integer.parseInt(BillIdCombo.getSelectedItem().toString())){
                UnitPriceText.setText(bill.getBill_total()+"");
                if(isNumeric(NumberItemsText.getText())){
                    TotalText.setText((bill.getBill_total()*Integer.parseInt(NumberItemsText.getText()))+"");
                }
            }
        }
        BillIdCombo.setEnabled(true);
        NumberItemsText.setEnabled(true);
        DetailAcceptButton.setEnabled(true);
    }//GEN-LAST:event_NewDetailButtonActionPerformed
    
    /**
     * This method is for the accept printing button, it get and validate the 
     * texts from the screen and create the PDF file to be printed, then save
     * the detail in the CSV file and include the detail in the details jTable.
     * @param evt The press button action.
     * @author josem
     */
    private void DetailAcceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DetailAcceptButtonActionPerformed
        //Variables for the Document information and object creation.
        String DetailID_text = DetailIdText.getText();
        String BillID_text = BillIdCombo.getSelectedItem().toString();
        String NumberDetails_text = NumberItemsText.getText();
        String UnitPrice_text = UnitPriceText.getText();
        String TotalPrice_text = TotalText.getText();
        
        //VARIABLE VALIDATION
        if(NumberDetails_text.equals("")){
            JOptionPane.showMessageDialog(null, "You need to complete this field: Numbers of Items");
            return;
        }
        if(isNumeric(NumberDetails_text) == false){
            JOptionPane.showMessageDialog(null, "Numbers of Items must be numeric");
            return;
        }
        if(Integer.parseInt(NumberDetails_text) < 1){
            JOptionPane.showMessageDialog(null, "Numbers of Items must be higher than 0");
            return;
        }
        
        //Variables for rhe Document creation.
        String filename = "Detail_" + DetailID_text;
        Document document = new Document();
        
        //START OF THE DOCUMENT CREATION
        try {
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(filename+".pdf"));
            
            document.open();
            
            PdfContentByte cb = writer.getDirectContent();
            Graphics g = cb.createGraphicsShapes(PageSize.LETTER.getWidth(), PageSize.LETTER.getHeight());
            
            //---------------- PAGE ----------------
            g.setColor(Color.black);
            g.drawRect(1, 1, 593, 790);
            g.drawLine(1, 240, 593, 240);
            g.drawLine(1, 285, 593, 285);
            g.drawLine(1, 450, 593, 450);
            
            //Set Fonts
            Font font1 = new Font("Tahoma", Font.BOLD, 40);
            Font font2 = new Font("Arial", Font.BOLD, 16);
            Font font3 = new Font("Arial", 0, 10);
            Font font4 = new Font("Tahoma", 0, 24);
            
            g.setFont(font1);
            g.drawString("BILL DETAIL", 170, 150);
            
            g.setFont(font4);
            g.drawString("DETAIL                            AMOUNT", 100, 270);
            
            g.setFont(font3);
            g.drawString("(This detail will be saved in the program,", 210, 170);
            g.drawString("but cannot be recovered)", 240, 185);
            
            g.setFont(font2);
            //Detail ID
            g.drawString("Detail ID:", 100, 350);
            g.drawString(DetailID_text, 410, 350);
            
            //Bill ID
            g.drawString("Bill ID:", 100, 400);
            g.drawString(BillID_text, 410, 400);
            
            //Number of items
            g.drawString("Number of Items:", 100, 500);
            g.drawString(NumberDetails_text, 410, 500);
            
            //Unit Price
            g.drawString("Unit Price:", 100, 550);
            g.drawString(UnitPrice_text, 410, 550);
            
            //Total
            g.drawString("Total:", 100, 600);
            g.drawString(TotalPrice_text, 410, 600);
            
            g.drawString("Created by FullBox", 100, 740);
            
            
        } catch (DocumentException de) {
            System.err.println(de.getMessage());
        } catch (FileNotFoundException ex) {
            System.err.println(ex.getMessage());
        }
        
        document.close();
        //FINISH OF THE DOCUMENT CREATION
        
        //CREATE THE OBJECT AND ADD TO THE ARRAYLIST
        detail_class temporary_object = new detail_class();
        temporary_object.setDetail_id(Integer.parseInt(DetailID_text));
        temporary_object.setBill_id(Integer.parseInt(BillID_text));
        temporary_object.setNumber_details(Integer.parseInt(NumberDetails_text));
        temporary_object.setUnit_price(Integer.parseInt(UnitPrice_text));
        temporary_object.setDetail_total(Integer.parseInt(TotalPrice_text));
        
        details_list.add(temporary_object);
        WriteCSV();
        TableDetailsModel.addRow(new Object []{temporary_object.getDetail_id(), temporary_object.getDetail_total()});
        add_id("detail");
        id_class id = main_class.ids.get(0);
        id.setId_detail(id.getId_detail() + 1);
        
        JOptionPane.showMessageDialog(null, "Detail created succesfully!");
        try {
            File path = new File(filename+".pdf");
            Desktop.getDesktop().open(path);
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        BillIdCombo.setEnabled(false);
        NumberItemsText.setEnabled(false);
        DetailAcceptButton.setEnabled(false);
        UnitPriceText.setText("");
        TotalText.setText("");
    }//GEN-LAST:event_DetailAcceptButtonActionPerformed
    
    /**
     * Nothing.
     * @param evt The press button action.
     */
    private void BillIdComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BillIdComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BillIdComboActionPerformed
    
    /**
     * This function takes the information of the textfield and generates a new
     * arithmetic information in the screen textfields, for the efectively working.
     * @param evt The key release action.
     * @author josem
     */
    private void NumberItemsTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NumberItemsTextKeyReleased
        // TODO add your handling code here:
        for(bill_class bill:bills_list){
            if(bill.getBill_id() == Integer.parseInt(BillIdCombo.getSelectedItem().toString())){
                UnitPriceText.setText(bill.getBill_total()+"");
                if(isNumeric(NumberItemsText.getText())){
                    TotalText.setText((bill.getBill_total()*Integer.parseInt(NumberItemsText.getText()))+"");
                }
                return;
            }
        }
    }//GEN-LAST:event_NumberItemsTextKeyReleased
    
    /**
     * This function takes the information of the combobox and generates a new
     * arithmetic information in the screen textfields, for the efectively working.
     * @param evt The item state change action.
     * @author josem
     */
    private void BillIdComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_BillIdComboItemStateChanged
        // TODO add your handling code here:
        for(bill_class bill:bills_list){
            if(bill.getBill_id() == Integer.parseInt(BillIdCombo.getSelectedItem().toString())){
                UnitPriceText.setText(bill.getBill_total()+"");
                if(isNumeric(NumberItemsText.getText())){
                    TotalText.setText((bill.getBill_total()*Integer.parseInt(NumberItemsText.getText()))+"");
                }
                return;
            }
        }
    }//GEN-LAST:event_BillIdComboItemStateChanged

    private void DetailAcceptButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DetailAcceptButtonMouseEntered
        DetailAcceptButton.setForeground(Color.GRAY);
        DetailAcceptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/impresora2-42.png")));
    }//GEN-LAST:event_DetailAcceptButtonMouseEntered

    private void DetailAcceptButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DetailAcceptButtonMouseExited
        DetailAcceptButton.setForeground(Color.black);
        DetailAcceptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/impresora2-32.png")));
    }//GEN-LAST:event_DetailAcceptButtonMouseExited

    private void NewDetailButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewDetailButtonMouseEntered
       NewDetailButton.setForeground(Color.GRAY);
       NewDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/agregar-factura-42.png")));
    }//GEN-LAST:event_NewDetailButtonMouseEntered

    private void NewDetailButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewDetailButtonMouseExited
       NewDetailButton.setForeground(Color.black);
       NewDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/agregar-factura-32.png")));
    }//GEN-LAST:event_NewDetailButtonMouseExited

    private void jButton9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseEntered
       jButton9.setForeground(Color.GRAY);
       jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/creators-42.png")));
    }//GEN-LAST:event_jButton9MouseEntered

    private void jButton9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseExited
       jButton9.setForeground(Color.black);
       jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/creators-32.png")));
    }//GEN-LAST:event_jButton9MouseExited

    private void jButton7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseEntered
       jButton7.setForeground(Color.GRAY);
       jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/archivo-42.png")));
    }//GEN-LAST:event_jButton7MouseEntered

    private void jButton7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseExited
       jButton7.setForeground(Color.black);
       jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/archivo-32.png")));
    }//GEN-LAST:event_jButton7MouseExited

    private void jButton6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseEntered
       jButton6.setForeground(Color.GRAY);
       jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/enlace-emoji-42.png")));
    }//GEN-LAST:event_jButton6MouseEntered

    private void jButton6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseExited
       jButton6.setForeground(Color.black);
       jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/enlace-emoji-32.png")));
    }//GEN-LAST:event_jButton6MouseExited
    
    /**
     * This function is for the set of the Bills combobox items and set the bills
     * combobox new model to show the information.
     * @author josem
     */
    private void createIdsBills(){
        int aux = 0;
        for(bill_class item:bills_list){
            ComboBillIdModel.insertElementAt(item.getBill_id(), aux);
            ComboBillIdModel.setSelectedItem(item.getBill_id());
        }
        BillIdCombo.setModel(ComboBillIdModel);
        BillIdCombo.updateUI();
    }
    
    /**
    * Load a new id to the Id's file (add 1 to the last ID).
    * @author jonns
    * @param id_mode to the identify the ID.
    */
    private void add_id(String id_mode){
        String archive = Paths.get("src", "DataBase", "ID's.csv").toString();
        FileWriter fw = null;
        PrintWriter pw = null;
        try{ 
            fw = new FileWriter(archive);
            pw = new PrintWriter(fw);
            for (id_class i : main_class.ids) {
            String line = null;

            if (id_mode.equals("detail")) {
                 line = i.getId_product() + "," + i.getId_item() + "," + i.getId_customer() + "," + i.getId_maintenance() + "," + i.getId_bill() + "," + (i.getId_detail()+ 1);
            }
            pw.println(line);
            }
            
        }catch (Exception ex) {
            ex.printStackTrace();
        }
        finally{
            try{
                if(fw != null){
                    fw.close();
            }
            }catch(Exception ex){
                    ex.printStackTrace();
            }      
        }
    }
    
    /**
    * Set to the textfiel with the new ID.
    * @author jonns
    * @param id_mode Identifies the ID.
    * @author josem
    */
    private void set_id(String id_mode){
        id_class id = main_class.ids.get(0);
        if(id_mode.equals("detail")){
           DetailIdText.setText(id.getId_detail()+"");
        }
    }
    
    /**
    * This function is used to write the CSV file with the new information.
    * @author josem
    */
    private void WriteCSV(){
        String archive = Paths.get("src", "DataBase", "Archivo_CSV_Details.csv").toString();
        FileWriter fw = null;
        PrintWriter pw = null;
        
        try{ 
            fw = new FileWriter(archive);
            pw = new PrintWriter(fw);
            for(detail_class i: details_list){
                String line = i.getDetail_id() + "," + i.getBill_id() + "," + i.getNumber_details() + "," + i.getUnit_price() + "," + i.getDetail_total();
                pw.println(line);
            }
            
        }catch (Exception ex) {
            ex.printStackTrace();
        }
        finally{
            try{
                if(fw != null){
                    fw.close();
                }
            }catch(Exception ex){
                    ex.printStackTrace();
            }      
        }
    }
    
    /**
     * This function read the details CSV and generate a list with all the created
     * details.
     * @author josem
     */
    private void initializeDetail(){
        String archive = Paths.get("src", "DataBase", "Archivo_CSV_Details.csv").toString();
        try {
            //Read and generate the objects to the arraylists.
            reader = new BufferedReader(new FileReader(archive));
            while((line = reader.readLine()) != null){
                detail_class temporary_object = new detail_class();
                parts = line.split(",");
                for(int i = 0; i < parts.length; i++){
                    switch(i){
                        case 0:
                            temporary_object.setDetail_id(Integer.parseInt(parts[i]));
                            break;
                        case 1:
                            temporary_object.setBill_id(Integer.parseInt(parts[i]));
                            break;
                        case 2:
                            temporary_object.setNumber_details(Integer.parseInt(parts[i]));
                            break;
                        case 3:
                            temporary_object.setUnit_price(Integer.parseInt(parts[i]));
                            break;
                        case 4:
                            temporary_object.setDetail_total(Integer.parseInt(parts[i]));
                            break;
                    }
                }
                
                //Add the object to the details list
                details_list.add(temporary_object);
                TableDetailsModel.addRow(new Object []{temporary_object.getDetail_id(), temporary_object.getDetail_total()});
            }
            reader.close();
            line = null;
            parts = null;
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    /**
     * This function read the bills CSV and generate a list with all the created
     * bills.
     * @author josem
     */
    private void initializeBilling(){
        String archive = Paths.get("src", "DataBase", "Archivo_CSV_Bills.csv").toString();
        try {
            //Read and generate the objects to the arraylists.
            reader = new BufferedReader(new FileReader(archive));
            while((line = reader.readLine()) != null){
                bill_class temporary_object = new bill_class();
                parts = line.split(",");
                int day = 0;
                int month = 0;
                int year = 0;
                Date date = null;
                for(int i = 0; i < parts.length; i++){
                    switch(i){
                        case 0:
                            temporary_object.setBill_id(Integer.parseInt(parts[i]));
                            break;
                        case 1:
                            temporary_object.setCustomer_id(Integer.parseInt(parts[i]));
                            break;
                        case 2:
                            day = Integer.parseInt(parts[i]);
                            break;
                        case 3:
                            month = Integer.parseInt(parts[i]) - 1;
                            break;
                        case 4:
                            year = Integer.parseInt(parts[i]) - 1900;
                            date = new Date(year, month, day);
                            temporary_object.setBill_date(date);
                            break;
                        case 5:
                            temporary_object.setBill_state(parts[i]);
                            break;
                        case 6:
                            temporary_object.setBill_subtotal(Integer.parseInt(parts[i]));
                            break;
                        case 7:
                            temporary_object.setBill_tax(Integer.parseInt(parts[i]));
                            break;
                        case 8:
                            temporary_object.setBill_total(Integer.parseInt(parts[i]));
                            break;
                    }
                }
                
                //Add the object to the bills list
                bills_list.add(temporary_object);
                TableBillsModel.addRow(new Object []{temporary_object.getBill_id(), temporary_object.getBill_total()});
            }
            reader.close();
            line = null;
            parts = null;
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    /**
    * This function is used to check if the input is a numeric String.
    * @author josem
    */
    private static boolean isNumeric(String cadena){
        try {
            Integer.parseInt(cadena);
            return true;
        } catch (NumberFormatException nfe){
        return false;
        }
    }
    
    /**
    * This function is used to delete the actual panel.
    * @author josem
    */
    private static void borrarPanel(JPanel panel) {
        panel.removeAll();
        panel.revalidate();
        panel.repaint();
    }
    
    /**
    * This function is used to show this actual panel.
    * @author josem
    */
    private void ShowJPanel(JPanel p){

        p.setSize(1030,750);
        p.setLocation(0,0);
        SettingsView.removeAll();
        SettingsView.add(p, BorderLayout.CENTER);
        SettingsView.revalidate();
        SettingsView.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ActualBillsTable;
    private javax.swing.JTable ActualPrintedTable;
    private javax.swing.JComboBox<String> BillIdCombo;
    private javax.swing.JButton DetailAcceptButton;
    private javax.swing.JTextField DetailIdText;
    private javax.swing.JPanel DetailsInformationPanel;
    private javax.swing.JButton NewDetailButton;
    private javax.swing.JTextField NumberItemsText;
    private javax.swing.JPanel SettingsView;
    private javax.swing.JTextField TotalText;
    private javax.swing.JTextField UnitPriceText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
